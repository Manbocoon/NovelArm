<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="selectDraft.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA/JJREFUWEfF
        V1tIXFcUFawg1UGMBWkFNQ2MD6Q1giEfLaXE2CIIgWpFFFGMD4KKRrSF0R+14qRaqMHRhEiRhFofiAjF
        9/tDrB/Vj/oABRGUgOCHP4IPdtc6zhw6dibOnWTaBQvOvXuttbfemXPP+HkKEbkHfgf+Av4KvgAfg5/Z
        Jb4DmmROTU1JS0uL5OfnS3Z2thQWFkpbW5ssLi6iLOl26bsFgsvB9f7+ftU0JiZGAgIChKXAwEBJSEiQ
        goICGRkZ4RB/gAWXzrcEgsygbWhoSOLi4lTD65icnCxzc3McxAaacM87wHwbfF5ZWenUICQkRNLS0sRi
        sUhTU5PU1tZKSkqK/o84aLVaHUN8gGvjYPOioiId6O/vrxoeHR0x+HewCbSA7DS5t7cnNTU1TkM0NDSg
        JDasjYGmzs5OHRQZGSnr6+sMewreUKIrwP2b9M3Pz0tQUJD2jo2N0feDEnkCiG8dHh7qAJPJJPv7+wz5
        XgmuAXQ/rq6uan9oaKicnp7SH6AE1wHC1urqah0wPDxMs1UVPQT0ttbWVp3R0dHBjEeq+CZAZN7a2pKw
        sDBlTExMpPHPy6rngOd98HV4eLixHIjK29vb9eRc854qGgR8P1VVVemsg4MDZn2oiu4AQWdpaak2LS0t
        0XRXFQ0CvoyBgQGdNTExwaz7qugOEPyWlZWlTTs7OzR9rIoGAd/nCwsLOquvr49Z36qiO0DwKicnR5s2
        NzdpilFFg4AvZXJyUmcNDg4y6xtVdAcIrNzZuCRHR0dp+loVDQK+kq6uLp21vLzMrDuq6A4QOD23iooK
        mn5WRYOAbyQ9PV3lcC85OTlhVuBl1Q0gMB0fH0tSUpIyct8/Pz+nMfFS4Rmgf8BPPZdkZmYmM/pV8TpA
        +LC3t1ebi4uLaX6mih4A2ghwPDU1VWfY//1fKoEngPiv+Ph4HcBnCfDN9pESuAHqn4JdfFPykiwrK1Ne
        JfAUMJRtb2/rELKuro5BGyA/GHHUEVi/B34CWvicS0pKnHzj4+MoyRNqDQEmGzcPLh2MjY1V+7r9zbgL
        bp2dncna2po0NzdLRESEk54MDg6W2dlZ6r17La+srLg8DUVFRYnZbHbZ1BVnZma8HqL84uJCHUaio6Nd
        hjvIQfk1ZjNX9bcZ4gZo4VeSB4zGxkbJzc2VjIwMycvLU8cv+zmQz4YHWNv09PS7HYKA0R/8CuQn8iU4
        APaAteAXdpkCrt0OwaM961j7Fm8agu8J1sEoXPsObMK/mMur7O7ult1dfpn+pyG4t2xscGuRWFz7FleH
        +MfvBt83d4ANe3p6pL6+3tHc+19O3gANQ/nDhgdfwGy//d+CQ/y7uZ/f3/0d1nCbK901AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>